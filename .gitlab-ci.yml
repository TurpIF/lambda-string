stages:
  - build
  - package

variables:
  # Activate remote debug server during integration test on specified port
  # DEBUG: <port>

  MAVEN_DYN_CLI_OPTS: '--batch-mode $([ -n "$DEBUG" ] && echo "-Dit.debug.remote=$DEBUG")'
  MAVEN_CLI_OPTS: 'echo "$MAVEN_DYN_CLI_OPTS"'

build:jdk8:
  image: maven:3.5.0-jdk-8
  stage: build
  script: "mvn package `eval $MAVEN_CLI_OPTS`"
  artifacts:
    paths:
    - target/*.jar
    expire_in: 20 minutes

package:jdk8:
  image: maven:3.5.0-jdk-8
  stage: package
  script: "mvn verify `eval $MAVEN_CLI_OPTS`"
  artifacts:
    paths:
      - target/*.jar

# Use the slim package because the normal one is unable to fetch plugins: https://github.com/carlossg/docker-maven/issues/50
test-jre9:
  image: maven:3.5.0-jdk-9-slim
  stage: package
  script: "mvn verify `eval $MAVEN_CLI_OPTS` -P skip-jar -DskipUTs"
  dependencies:
  - build:jdk8

test-jre8-ibm:
  image: maven:3.5.0-ibmjava-8-alpine
  stage: package
  script: "mvn verify `eval $MAVEN_CLI_OPTS` -P skip-jar -DskipUTs"
  dependencies:
  - build:jdk8

build-benchmark:
  image: maven:3.5.0-jdk-8
  stage: build
  script: "mvn package `eval $MAVEN_CLI_OPTS` -DfinalName=build"
  artifacts:
    paths:
    - target/*.jar
    expire_in: 20 minutes

benchmark:
  image: java:latest
  stage: package
  script: /usr/lib/jvm/java-8-openjdk-amd64/bin/java -jar target/build-benchmarks.jar > ./benchmark.log
  dependencies:
  - build-benchmark
  artifacts:
    paths:
    - benchmark.log
  only:
  - master
  - tags
